const int trigPin = 11;
const int echoPin = 12;

// defines variables
long duration;
int distance;

const int detectionThreshold = 10;  // Threshold distance in cm to detect object
bool objectPresent = false;         // Tracks presence of object
int objectCount = 0;                // Total number of objects detected

void setup() {
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT);  // Sets the echoPin as an Input
  pinMode(LED_BUILTIN, OUTPUT); // Built-in LED (optional for debugging)

  Serial.begin(9600); // Starts the serial communication
}

void loop() {
  // Clears the trigPin
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);

  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);

  // Calculate the distance
  distance = duration * 0.034 / 2;

  // Debug print distance (optional)
  Serial.print("Distance: ");
  Serial.println(distance);

  // Object Detection Logic
  if (distance <= detectionThreshold && distance > 0) {
    if (!objectPresent) {
      // Object just appeared
      Serial.println("Object Detected & Present");
      objectPresent = true;
    }
  } else {
    if (objectPresent) {
      // Object just left
      Serial.println("Detected Object Is Gone");
      objectCount++;
      Serial.print(objectCount);
      Serial.println(" Objects Detected");
      objectPresent = false;
    } else {
      // Still waiting for an object
      Serial.println("Waiting To Detect An Object");
    }
  }

  delay(300); // Delay for readability
